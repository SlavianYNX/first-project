
def test_set_book_genre_new_genre_book():
    collector = BooksCollector()
    book_one = 'Гордость и предубеждение и зомби'
    genre = 'Комедии'
    collector.add_new_book(book_one)
    collector.set_book_genre(book_one, genre)
    assert book_one in collector.books_genre
    assert collector.get_book_genre(book_one) == genre

@pytest.mark.parametrize('book_name, genre', {
    ('Война и мир', 'Ужасы'),
    ('Преступление и наказание', 'Детективы'),
    ('Гарри Поттер и философский камень', 'Фантастика')
})
def test_get_book_genre(book_name, genre):
    collector = BooksCollector()
    collector.add_new_book(book_name)
    collector.set_book_genre(book_name, genre)
    assert collector.get_book_genre(book_name) == genre


def test_get_books_with_specific_genre():
    collector = BooksCollector()
    collector.add_new_book('Гарри Поттер')
    collector.set_book_genre('Гарри Поттер', 'Фантастика')
    assert collector.get_books_with_specific_genre('Фантастика') == ['Гарри Поттер']


def test_get_books_genre_get_dictionary():
    collector = BooksCollector()
    books_genre = {'Колобок': 'Мультфильмы'}
    assert collector.get_books_genre() == books_genre



def test_get_books_for_children_return_books_children():
    collector = BooksCollector()
    collector.genre = ['Фантастика', 'Ужасы', 'Детективы', 'Мультфильмы', 'Комедии']
    collector.genre_age_rating = ['Ужасы', 'Детективы']
    collector.books_genre = {
        'Колобок': 'Мультфильмы',
        'Чужой': 'Ужасы',
        'Гарри Потер': 'Фантастика',
        'Агата Кристи': 'Детективы'
    }
    result = ['Колобок', 'Гарри Потер']
    assert collector.get_books_for_children() == result

def test_add_book_in_favorites_add_book():
    collector = BooksCollector()
    books_genre = 'Чужой'
    collector.add_new_book(books_genre)
    collector.add_book_in_favorites(books_genre)
    assert books_genre in collector.favorites
    assert len(collector.favorites) == 1

def test_delete_book_from_favorites_delete_book():
    collector = BooksCollector()
    book_new = 'Чужой'
    collector.add_book_in_favorites(book_new)
    collector.delete_book_from_favorites(book_new)
    assert book_new not in collector.favorites

def test_get_list_of_favorites_books_get_list():
    collector = BooksCollector()
    collector.favorites = ['Чужой', 'Колобок', 'Шерлок Холмс']
    assert collector.get_list_of_favorites_books() == ['Чужой', 'Колобок', 'Шерлок Холмс']